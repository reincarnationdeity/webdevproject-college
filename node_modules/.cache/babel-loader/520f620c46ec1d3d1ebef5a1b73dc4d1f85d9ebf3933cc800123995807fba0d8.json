{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reincarndeity\\\\Documents\\\\GitHub\\\\webdevv\\\\src\\\\pages\\\\LR3.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet previosu;\nconst Lr3 = () => {\n  let length = 0;\n  let arithmeticalMean = prompt('Введите числа через запятую').split(',').filter(i => typeof parseInt(i) === 'number').map(i => {\n    length++;\n    return Math.pow(parseInt(i), 3);\n  }).reduce((previousValue, currentValue, currentIndex, array) => previousValue + currentValue) / length;\n  console.log(arithmeticalMean);\n  let coordinate1 = Object.assign(prompt('Введите первую точку x,y через запятую').split(',')).map(i => parseInt(i));\n  let coordinate2 = Object.assign(prompt('Введите вторую точку x,y через запятую').split(',').map(i => parseInt(i)));\n  let coordinate3 = Object.assign(prompt('Введите третью точку x,y через запятую').split(',').map(i => parseInt(i)));\n  console.log(coordinate1, coordinate2, coordinate3);\n  function trianglePerimeterAndArea(point1, point2, point3) {\n    let a = distance(point1, point2);\n    let b = distance(point2, point3);\n    let c = distance(point3, point1);\n    let p = (a + b + c) / 2;\n    let area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return {\n      perimeter: a + b + c,\n      area: area\n    };\n  }\n  function distance(point1, point2) {\n    return Math.sqrt(Math.pow(point2[0] - point1[0], 2) + Math.pow(point2[1] - point1[1], 2));\n  }\n  console.log(trianglePerimeterAndArea(coordinate1, coordinate2, coordinate3));\n  let array = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = Lr3;\nexport default Lr3;\nvar _c;\n$RefreshReg$(_c, \"Lr3\");","map":{"version":3,"names":["React","previosu","Lr3","length","arithmeticalMean","prompt","split","filter","i","parseInt","map","Math","pow","reduce","previousValue","currentValue","currentIndex","array","console","log","coordinate1","Object","assign","coordinate2","coordinate3","trianglePerimeterAndArea","point1","point2","point3","a","distance","b","c","p","area","sqrt","perimeter"],"sources":["C:/Users/reincarndeity/Documents/GitHub/webdevv/src/pages/LR3.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nlet previosu\r\n\r\nconst Lr3 = () => {\r\n    let length = 0;\r\n    let arithmeticalMean = prompt('Введите числа через запятую').split(',').filter((i)=>typeof(parseInt(i)) === 'number')\r\n        .map((i)=>{\r\n            length++;\r\n            return Math.pow(parseInt(i),3)\r\n        }).reduce((previousValue, currentValue,currentIndex,array)=>previousValue+currentValue)/length;\r\n    console.log(arithmeticalMean);\r\n\r\n    let coordinate1 = Object.assign(prompt('Введите первую точку x,y через запятую').split(',')).map((i)=>parseInt(i));\r\n    let coordinate2 = Object.assign(prompt('Введите вторую точку x,y через запятую').split(',').map((i)=>parseInt(i)))\r\n    let coordinate3 = Object.assign(prompt('Введите третью точку x,y через запятую').split(',').map((i)=>parseInt(i)))\r\n    console.log(coordinate1, coordinate2, coordinate3);\r\n\r\n    function trianglePerimeterAndArea(point1, point2, point3) {\r\n        let a = distance(point1, point2);\r\n        let b = distance(point2, point3);\r\n        let c = distance(point3, point1);\r\n\r\n        let p = (a + b + c) / 2;\r\n\r\n        let area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\r\n\r\n        return {\r\n            perimeter: a + b + c,\r\n            area: area\r\n        };\r\n    }\r\n\r\n    function distance(point1, point2) {\r\n        return Math.sqrt(Math.pow(point2[0] - point1[0], 2) + Math.pow(point2[1] - point1[1], 2));\r\n    }\r\n\r\n    console.log(trianglePerimeterAndArea(coordinate1, coordinate2, coordinate3));\r\n\r\n    let array = []\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Lr3;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}